# DAGs

```{r, include=FALSE}
library(dagitty)
library(tidyverse)
library(xfun)
```

## Aufgabe 1

::: panel-tabset

### A1

```{r, echo=FALSE}

dag1 <- 
  "
dag {
y1
y2
y3
y4
y5
y1 -> y2
y1 -> y3
y2 -> y3
y2 -> y4
y3 -> y4
y4 -> y5
y5 -> y1
}
"
dag1 <- dagitty(dag1)
graphLayout(dag1) |> plot()

```

Gegeben sei der DAG `g` (s. u.). Der DAG verfügt über Variablen, die als Knoten im Graph dargestellt sind (mit $x_1, x_2, \ldots x_n$ bezeichnet) und über Kanten verbunden sind.

*Welche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?*

UV: `y3`.

AV: `y4`.

*Hinweise*:

-   Mengen sind mittels geschweifter Klammern gekennzeichnet, z.B. `{x8, x9}` meint die Menge mit den zwei Elementen `x8` und `x9`.
-   Die leere Menge `{ }` bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.
-   Alle Variablen werden als gemessen vorausgesetzt.
-   Es ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie "keine Lösung".
-   Es ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.

Answerlist\\

-   `{y1, y2}`

-   `{ }`

-   `?`

-   `{y2}`

-   `{y5, y1}`\

### L1

Richtige Antwort ist: `{y2}`

Es gibt einen direkten kausalen Pfad. Es führt ein Confunder Pfad über `x2` und einer über `x1` und `x2`. Für ersteres wäre `x2` der Confunder, für den zweiten Pfad wäre `x1` der Confunder. Da beide Pfade über `x2` führen, reicht es nur `x9` zu kontrollieren.

:::

## Aufgabe 2

::: panel-tabset

### A2

```{r echo=FALSE}
dag2 <- 
  "
dag {
x1
x2
x3
x4
x5
x6
x1 -> x2
x1 -> x3
x1 -> x4
x2 -> x4
x2 -> x5
x3 -> x5
x3 -> x6
x4 -> x6
x5 -> x6
}
"

dag2 <- dagitty(dag2)
graphLayout(dag2) |> plot()
```

Gegeben sei der DAG `g` (s. u.). Der DAG verfügt über Variablen, die als Knoten im Graph dargestellt sind (mit $x_1, x_2, \ldots x_n$ bezeichnet) und über Kanten verbunden sind.

*Welche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?*

UV: `x4`.

AV: `x6`.

*Hinweise*:

-   Mengen sind mittels geschweifter Klammern gekennzeichnet, z.B. `{x8, x9}` meint die Menge mit den zwei Elementen `x8` und `x9`.
-   Die leere Menge `{ }` bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.
-   Alle Variablen werden als gemessen vorausgesetzt.
-   Es ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie "keine Lösung".
-   Es ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.

Answerlist\\

-   `{x2}`

-   `{ }`

-   `{x3}`

-   `{x6, x1}`

-   `{x1, x2}`\

### L2

Richtige Antwort ist: `{x1, x2}` 

Es führt sowohl ein Konfundierungspfad über `x1` (ohne dabei über `x2` zu gehen) als auch einer über `x2` (ohne dabei über `x1` zu gehen).

:::

## Aufgabe 3

::: panel-tabset

### A3

```{r echo=FALSE}
dag3 <- 
  "
dag {
x1
x2
x3
x4
x5
x6
x1 -> x2
x1 -> x3
x2 -> x4
x2 -> x5
x3 -> x5
x3 -> x6
x4 -> x6
x5 -> x6
}
"


dag3 <- dagitty(dag3)
graphLayout(dag3) |> plot()
```

Gegeben sei der DAG `g` (s. u.). Der DAG verfügt über Variablen, die als Knoten im Graph dargestellt sind (mit $x_1, x_2, \ldots x_n$ bezeichnet) und über Kanten verbunden sind.

*Welche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?*

UV: `x5`.

AV: `x6`.

*Hinweise*:

-   Mengen sind mittels geschweifter Klammern gekennzeichnet, z.B. `{x8, x9}` meint die Menge mit den zwei Elementen `x8` und `x9`.
-   Die leere Menge `{ }` bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.
-   Alle Variablen werden als gemessen vorausgesetzt.
-   Es ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie "keine Lösung".
-   Es ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.

Answerlist\\

-   `{x2}`

-   `{ }`

-   `{x3}`

-   `{x4, x1}`

-   `{x3, x4}`\

### L3

Richtige Antwort ist: `{x3, x4}` 

`x3` muss auf jeden Fall kontrolliert werden, dadurch ist auch automatisch der Pfad über `x1` geschlossen. Schaut man sich jetzt den Pfad über `x2` und `x4` an, dann sieht man das der Confunder `x2` ist, jedoch gibt es diese Antwortmöglichkeit nicht. Wir wissen aber auch, dass es egal ist welche Zwischenvariable man auf einem Confunderpfad kontrolliert, solange man eine kontrolliert. Deswegen kann man auch `x4`kontrollieren, um diesen Pfad zu schließen.

:::

## Aufgabe 4

::: panel-tabset

### A4

```{r echo=FALSE}
dag4 <- 
  "
dag {
x1
x2
x3
x4
x5
x6
x1 -> x2
x1 -> x3
x1 -> x4
x1 -> x6
x2 -> x3
x2 -> x4
x3 -> x5
x4 -> x5
x4 -> x6
}
"


dag4 <- dagitty(dag4)
graphLayout(dag4) |> plot()
```

Gegeben sei der DAG `g` (s. u.). Der DAG verfügt über Variablen, die als Knoten im Graph dargestellt sind (mit $x_1, x_2, \ldots x_n$ bezeichnet) und über Kanten verbunden sind.

*Welche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?*

UV: `x4`.

AV: `x6`.

*Hinweise*:

-   Mengen sind mittels geschweifter Klammern gekennzeichnet, z.B. `{x8, x9}` meint die Menge mit den zwei Elementen `x8` und `x9`.
-   Die leere Menge `{ }` bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.
-   Alle Variablen werden als gemessen vorausgesetzt.
-   Es ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie "keine Lösung".
-   Es ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.

Answerlist\\

-   `{x2}`

-   `{ }`

-   `{x1}`

-   `{x4, x1}`

-   `{x1, x2}`\

### L4

Richtige Antwort ist: `{x1}` 

`x1` muss auf jeden Fall kontrolliert werden, denn alle Confunder-Pfade müssen zwangsläufig über `x1` gehen. Alle Pfade, die über `x5` haben an dieser Stelle eine Kollision, also dürfen wir hier nichts kontrollieren. Genauso haben wir einen Collider bei `x3` wenn wir den Pfad von `x4` über `x2`, `x3`, `x1` zu `x6` gehen.

:::

## Aufgabe 5

::: panel-tabset

### A5

```{r echo=FALSE}
dag5 <- 
  "
dag {
x1
x2
x3
x4
x5
x6
x7
x8
x1 -> x2
x1 -> x3
x1 -> x4
x2 -> x5
x2 -> x6
x3 -> x4
x3 -> x7
x4 -> x8
x5 -> x6
x6 -> x8
x7 -> x8
}
"


dag5 <- dagitty(dag5)
graphLayout(dag5) |> plot()
```

Gegeben sei der DAG `g` (s. u.). Der DAG verfügt über Variablen, die als Knoten im Graph dargestellt sind (mit $x_1, x_2, \ldots x_n$ bezeichnet) und über Kanten verbunden sind.

*Welche minimale Variablenmenge muss kontrolliert werden, um den kausalen Effekt von der UV zur AV zu identifizieren?*

UV: `x4`.

AV: `x6`.

*Hinweise*:

-   Mengen sind mittels geschweifter Klammern gekennzeichnet, z.B. `{x8, x9}` meint die Menge mit den zwei Elementen `x8` und `x9`.
-   Die leere Menge `{ }` bedeutet, dass keine Variable kontrolliert werden muss, um den kausalen Effekt zu identifizieren.
-   Alle Variablen werden als gemessen vorausgesetzt.
-   Es ist möglich, dass es keine Lösung gibt, dass es also keine Adjustierungsmenge gibt, um den kausalen Effekt zu identifizieren. Wenn dies der Fall sein sollte, wählen Sie "keine Lösung".
-   Es ist möglich, dass einzelne Variablen keine Kanten besitzen, also keine Verbindung zu anderen Variablen (Knoten) haben.

Answerlist\\

-   `{x2}`

-   `{ }`

-   `{x1}`

-   `{x4, x1}`

-   `{x1, x2}`\

### L5

Richtige Antwort ist: `{x1}` 

`x1` muss auf jeden Fall kontrolliert werden, denn alle Confunder-Pfade müssen zwangsläufig über `x1` gehen. Alle Pfade, die über `x5` haben an dieser Stelle eine Kollision, also dürfen wir hier nichts kontrollieren. Genauso haben wir einen Collider bei `x3` wenn wir den Pfad von `x4` über `x2`, `x3`, `x1` zu `x6` gehen.

:::
